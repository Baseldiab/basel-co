import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { TLocale } from "../interfaces/global.interfaces";
import getTranslations from "../i18n";

const inter = Inter({ subsets: ["latin"] });

export interface LocaleParams {
  locale: TLocale;
}

export async function build_meta_data(locale: TLocale, routes: string[] = []): Promise<Metadata> {
  const { t } = await getTranslations(locale, ["fields"]);
  // const t = await useTranslations();

  routes.unshift(t("app-name"));
  return {
    title: routes.join(" | "),
    description: t("app-description"),
    keywords: "",
  };
}
interface ParamsType extends LocaleParams {}

export async function generateMetadata({
  params: { locale },
}: {
  params: ParamsType;
}): Promise<Metadata> {
  return await build_meta_data(locale);
}

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={inter.className}>{children}</body>
    </html>
  );
}
